{"version":3,"sources":["actions/index.js","components/Comic.js","components/Comics.js","components/FullComic.js","components/GetComicForm.js","App.js","reducers/index.js","index.js"],"names":["FETCH_SUCCESS","FETCH_FAIL","FETCH_START","ADD_COMMENT","fetchComics","daysElapsed","Math","floor","Date","now","num","ceil","random","dispatch","type","axios","all","get","then","res","payload","map","obj","alt","data","img","title","comments","catch","err","Comic","props","comic","to","className","src","Comics","state","useSelector","useDispatch","useEffect","isLoading","error","dataLength","comics","length","next","hasMore","loader","FullComic","useParams","Number","useState","selectComic","setSelectComic","history","useHistory","includes","console","log","forEach","resultObj","onClick","push","GetComicForm","number","setNumber","setError","comicNumEstimate","onSubmit","e","preventDefault","handleSubmit","class","name","value","onChange","target","App","path","component","exact","initialState","isFetching","store","createStore","action","comment","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.635ee5f0.chunk.js","sourcesContent":["import axios from \"axios\";\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const FETCH_FAIL = \"FETCH_FAIL\";\nexport const FETCH_START = \"FETCH_START\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\n\nexport const fetchComics = () => {\n  // assumes a new comic every 3 days and adds the number to potential list\n  let daysElapsed = Math.floor((Date.now() / 86400000 - 18708) / 3);\n  let num = Math.ceil(Math.random() * (2440 + daysElapsed));\n  return (dispatch) => {\n    dispatch({ type: FETCH_START });\n    axios\n      .all([\n        axios.get(`http://xkcd.com/${num}/info.0.json`),\n        axios.get(`http://xkcd.com/${num + 1}/info.0.json`),\n        axios.get(`http://xkcd.com/${num + 2}/info.0.json`),\n        axios.get(`http://xkcd.com/${num + 3}/info.0.json`),\n      ])\n      .then((res) => {\n        dispatch({\n          type: FETCH_SUCCESS,\n          payload: res.map((obj) => {\n            return {\n              alt: obj.data.alt,\n              img: obj.data.img,\n              num: obj.data.num,\n              title: obj.data.title,\n              comments: [],\n            };\n          }),\n        });\n      })\n      .catch((err) => {\n        dispatch({ type: FETCH_FAIL, payload: err });\n      });\n  };\n};\n\nexport const addComment = (comment, num) => {\n  return { type: ADD_COMMENT, payload: { comment: comment, num: num } };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Comic = (props) => {\n  const { comic } = props;\n\n  return (\n    <div>\n      <Link to={`/${comic.num}`}>\n        <div className=\" rounded bg-white shadow m-8 p-8 flex flex-col items-center max-w-screen-xl\">\n          <h2 className=\"text-4xl mb-8\">{comic.title}</h2>\n          <p className=\"text-l mb-4\"># {comic.num}</p>\n\n          <img className=\"mb-4\" src={comic.img} alt={comic.alt} />\n\n          <p className=\"text-xl m-4\">{comic.alt}</p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Comic;\n","import { useEffect } from \"react\";\nimport { fetchComics } from \"../actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Comic from \"./Comic\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst Comics = () => {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchComics());\n  }, []);\n\n  function fetchMore() {\n    dispatch(fetchComics());\n  }\n\n  return (\n    <div>\n      <div className=\"flex flex-col items-center \">\n        {state.isLoading && <div>\"LOADING....\"</div>}\n        {state.error && <div>\"ERROR WHILE LOADING\"</div>}\n\n        <InfiniteScroll\n          dataLength={state.comics.length}\n          next={() => fetchMore()}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n        >\n          {state.comics.map((comic) => {\n            return <Comic comic={comic} key={comic.title} />;\n          })}\n        </InfiniteScroll>\n      </div>\n    </div>\n  );\n};\n\nexport default Comics;\n","import React from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n// import { addComment } from \"../actions\";\nimport axios from \"axios\";\n\nconst FullComic = () => {\n  let { num } = useParams();\n  num = Number(num);\n  const comics = useSelector((state) => state.comics);\n  const [selectComic, setSelectComic] = useState([{}]);\n  let history = useHistory();\n  // const [comment, setComment] = useState(\"\");\n  // const dispatch = useDispatch();\n\n  const handleNext = () => {\n    console.log(`/${num + 1}`);\n    history.push(`/${num + 1}`);\n  };\n\n  const handleLast = () => {\n    history.push(`/${num - 1}`);\n  };\n\n  useEffect(() => {\n    // Checks comics array is populated and includes the number we are looking for.\n    if (comics.length > 0 && comics.map((comic) => comic.num).includes(num)) {\n      console.log(num);\n      comics.forEach((comic) => {\n        if (Number(comic.num) === Number(num)) {\n          setSelectComic(comic);\n        }\n      });\n      // if we dont find existing array we go and 'get' it\n    } else {\n      axios\n        .get(`http://xkcd.com/${num}/info.0.json`)\n        .then((res) => {\n          let resultObj = {\n            alt: res.data.alt,\n            img: res.data.img,\n            num: res.data.num,\n            title: res.data.title,\n            comments: [],\n          };\n          setSelectComic(resultObj);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [num, comics]);\n\n  // const handleChange = (e) => {\n  //   setComment(e.target.value);\n  // };\n\n  // const handleSubmit = (comment, num) => {\n  //   if (comment) {\n  //     dispatch(addComment(comment, num));\n  //     setComment(\"\");\n  //   }\n  // };\n\n  return (\n    <div>\n      <div className=\"flex flex-col items-center w-full \">\n        <div className=\"flex mt-8 mb-5\">\n          <button\n            className=\"bg-gradient-to-r mr-12 p-4 from-gray-500 rounded font-bold\"\n            onClick={() => handleLast()}\n          >\n            Previous\n          </button>\n          <button\n            className=\"bg-gradient-to-l ml-10 p-4 pl-10 from-gray-500 rounded font-bold\"\n            onClick={() => handleNext()}\n          >\n            Next\n          </button>\n        </div>\n        <h1 className=\"text-5xl mb-8\">{selectComic.title}</h1>\n        <img\n          className=\"max-w-screen-xl max-h-screen\"\n          src={selectComic.img}\n          alt={selectComic.alt}\n        />\n        <p className=\"text-2xl mt-16 w-9/12\">{selectComic.alt}</p>\n        <p className=\"text-l my-4\"># {selectComic.num}</p>\n\n        {/* {selectComic.comments &&\n          selectComic.comments.map((comment) => (\n            <div class=\"media\"> {comment} </div>\n          ))}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            width: \"30%\",\n          }}\n          class=\"columns\"\n        >\n          <textarea\n            class=\"textarea is-small\"\n            style={{\n              width: \"30%\",\n              margin: \"30px auto 10px\",\n              textAlign: \"center\",\n            }}\n            name=\"comment\"\n            placeholder=\"add your own caption\"\n            type=\"text\"\n            onChange={handleChange}\n            value={comment}\n          ></textarea>\n\n          <button\n            class=\"button is-small is-info\"\n            style={{\n              width: \"40%\",\n              padding: \"2%\",\n              margin: \"10px\",\n            }}\n            type=\"submit\"\n            onClick={() => handleSubmit(comment, num)}\n          >\n            Add your own caption!\n          </button>\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default FullComic;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst GetComicForm = () => {\n  let history = useHistory();\n  const [number, setNumber] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  let comicNumEstimate = Math.floor((Date.now() / 86400000 - 18708) / 3);\n\n  const changeHandler = (e) => {\n    if (\n      e.target.value >= 0 &&\n      e.target.value < Math.ceil(2440 + comicNumEstimate)\n    ) {\n      setNumber(e.target.value);\n      setError(false);\n    } else {\n      setError(true);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(number);\n    history.push(`/${number}`);\n  };\n\n  return (\n    <div className=\" flex flex-col items-center mb-6\">\n      <p>Jump to comic by #</p>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <input\n          class=\"focus:ring-indigo-500 focus:border-indigo-500 block text-xl border-gray-300 rounded-md\"\n          type=\"number\"\n          name=\"jumpToNum\"\n          value={number}\n          onChange={changeHandler}\n        ></input>\n        {error && (\n          <p className=\"text-red-700 text-md\">\n            {\" \"}\n            # Must be 1 - {Math.ceil(2440 + comicNumEstimate)}\n          </p>\n        )}\n        <button className=\"btn btn-blue self-center my-4 ml-20 \" type=\"submit\">\n          Jump\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default GetComicForm;\n","import Comics from \"./components/Comics\";\nimport FullComic from \"./components/FullComic\";\nimport GetComicForm from \"./components/GetComicForm\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <div className=\"flex flex-col justify-start items-center  \">\n          <div className=\" flex justify-between w-full bg-gradient-to-r from-yellow-200 via-red-200 to-pink-200  rounded shadow-xl h-1/6\">\n            <Link to=\"/\">\n              <p className=\"underline inline font-black text-lg\">Go Home</p>\n            </Link>\n            <h1 className=\"text-8xl self-center ml-40 \"> xkcd comics</h1>\n            <GetComicForm />\n          </div>\n          {/* <FaviAnimation /> */}\n          <Route path=\"/:num\" component={FullComic} />\n          <Route exact path=\"/\" component={Comics} />\n        </div>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import {\n  FETCH_SUCCESS,\n  FETCH_FAIL,\n  FETCH_START,\n  ADD_COMMENT,\n} from \"../actions\";\n\nconst initialState = {\n  comics: [],\n  isFetching: false,\n  err: \"\",\n};\n\nexport const comicReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        comics: [...state.comics, ...action.payload],\n        isLoading: false,\n        error: \"\",\n      };\n    case FETCH_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        comics: state.comics.map((comic) => {\n          if (Number(comic.num) == Number(action.payload.num)) {\n            return {\n              ...comic,\n              comments: [...comic.comments, action.payload.comment],\n            };\n          } else {\n            return comic;\n          }\n        }),\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { comicReducer } from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport \"./index.css\";\n\nlet store = createStore(comicReducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}